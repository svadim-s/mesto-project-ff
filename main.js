(()=>{"use strict";var __webpack_modules__={653:()=>{eval('\n;// CONCATENATED MODULE: ./src/components/modal.js\nfunction openPopup(popup) {\n  popup.classList.add(\'popup_is-animated\');\n  setTimeout(function () {\n    popup.classList.add(\'popup_is-opened\');\n  }, 0);\n  document.addEventListener(\'keydown\', closePopupEsc);\n}\nfunction closePopup(popup) {\n  popup.classList.remove(\'popup_is-opened\');\n  setTimeout(function () {\n    popup.classList.remove(\'popup_is-animated\');\n  }, 500);\n  document.removeEventListener(\'keydown\', closePopupEsc);\n}\nfunction closePopupOverlay(evt) {\n  if (evt.target.classList.contains(\'popup_is-opened\')) {\n    closePopup(evt.target);\n  }\n}\nfunction closePopupEsc(evt) {\n  if (evt.key === \'Escape\') {\n    var openedPopup = document.querySelector(\'.popup_is-opened\');\n    closePopup(openedPopup);\n  }\n}\n;// CONCATENATED MODULE: ./src/components/api.js\nvar config = {\n  baseUrl: \'https://nomoreparties.co/v1/cohort-magistr-2\',\n  headers: {\n    authorization: \'5abd209c-c0b0-45e6-8f17-fd20a6b8ecf1\',\n    \'Content-Type\': \'application/json\'\n  }\n};\nvar getUserData = function getUserData() {\n  return fetch("".concat(config.baseUrl, "/users/me"), {\n    method: "GET",\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n  });\n};\nvar getInitialCards = function getInitialCards() {\n  return fetch("".concat(config.baseUrl, "/cards"), {\n    method: "GET",\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n  });\n};\nvar editProfile = function editProfile(profileName, profileJob) {\n  return fetch("".concat(config.baseUrl, "/users/me"), {\n    method: \'PATCH\',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: profileName,\n      about: profileJob\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n  });\n};\nvar editProfileImage = function editProfileImage(profileAvatar) {\n  return fetch("".concat(config.baseUrl, "/users/me/avatar"), {\n    method: \'PATCH\',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: profileAvatar\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n  });\n};\nvar addNewCard = function addNewCard(cardName, cardLink) {\n  return fetch("".concat(config.baseUrl, "/cards"), {\n    method: \'POST\',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: cardName,\n      link: cardLink\n    })\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n  });\n};\nvar putLikeCard = function putLikeCard(cardId) {\n  return fetch(config.baseUrl + "/cards/likes/".concat(cardId), {\n    method: "PUT",\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n  });\n};\nvar deleteLikeCard = function deleteLikeCard(cardId) {\n  return fetch(config.baseUrl + "/cards/likes/".concat(cardId), {\n    method: "DELETE",\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n  });\n};\nvar deleteCard = function deleteCard(cardId) {\n  return fetch("".concat(config.baseUrl, "/cards/").concat(cardId), {\n    method: "DELETE",\n    headers: config.headers\n  }).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n  });\n};\n\n;// CONCATENATED MODULE: ./src/components/card.js\n\nvar cardsTemplate = document.querySelector(\'#card-template\').content;\nvar containerCard = document.querySelector(\'.places__list\');\nfunction createCard(cardData, userId, deleteCallback, likeCardCallback, imageClickCallback) {\n  var cardElement = cardsTemplate.querySelector(\'.card\').cloneNode(true);\n  var imageElement = cardElement.querySelector(\'.card__image\');\n  var cardLikeCounter = cardElement.querySelector(".card__like-count");\n  var likeButton = cardElement.querySelector(\'.card__like-button\');\n  cardElement.querySelector(\'.card__title\').textContent = cardData.name;\n  imageElement.src = cardData.link;\n  imageElement.alt = cardData.name;\n  cardLikeCounter.textContent = cardData.likes.length;\n  cardElement.dataset.id = cardData._id;\n  if (cardData.owner._id === userId) {\n    cardElement.querySelector(\'.card__delete-button\').addEventListener(\'click\', function (e) {\n      deleteCallback(cardData._id);\n    });\n  } else {\n    cardElement.querySelector(\'.card__delete-button\').remove();\n  }\n  if (checkUserLike(cardData, userId)) {\n    likeButton.classList.add(\'card__like-button_is-active\');\n  } else {\n    likeButton.classList.remove(\'card__like-button_is-active\');\n  }\n  likeButton.addEventListener(\'click\', function () {\n    likeCardCallback(cardData, userId, cardElement, likeButton);\n  });\n  imageElement.addEventListener(\'click\', function () {\n    return imageClickCallback(cardData.link, cardData.name, cardData.name);\n  });\n  return cardElement;\n}\nfunction likeCard(card, userId, cardElement, btn) {\n  var likeCounter = cardElement.querySelector(".card__like-count");\n  if (checkUserLike(card, userId)) {\n    deleteLikeCard(card._id).then(function (res) {\n      btn.classList.remove(\'card__like-button_is-active\');\n      likeCounter.textContent = res.likes.length;\n      card.likes = res.likes;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } else {\n    putLikeCard(card._id).then(function (res) {\n      btn.classList.add(\'card__like-button_is-active\');\n      likeCounter.textContent = res.likes.length;\n      card.likes = res.likes;\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n}\nfunction checkUserLike(card, userId) {\n  return card.likes.some(function (like) {\n    return like._id === userId;\n  });\n}\n\n;// CONCATENATED MODULE: ./src/components/validation.js\nvar showInputError = function showInputError(formElement, inputElement, errorMessage, validationConfig) {\n  var errorElement = formElement.querySelector(".".concat(inputElement.id, "-error"));\n  inputElement.classList.add(validationConfig.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(validationConfig.errorClass);\n};\nvar hideInputError = function hideInputError(formElement, inputElement, validationConfig) {\n  var errorElement = formElement.querySelector(".".concat(inputElement.id, "-error"));\n  inputElement.classList.remove(validationConfig.inputErrorClass);\n  errorElement.classList.remove(validationConfig.errorClass);\n  errorElement.textContent = \'\';\n};\nvar resetInputErrors = function resetInputErrors(formElement, validationConfig) {\n  var inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  inputList.forEach(function (inputElement) {\n    hideInputError(formElement, inputElement, validationConfig);\n  });\n};\nvar checkInputValidity = function checkInputValidity(formElement, inputElement, validationConfig) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity("");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\n  } else {\n    hideInputError(formElement, inputElement, validationConfig);\n  }\n};\nvar hasInvalidInput = function hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n};\nvar toggleButtonState = function toggleButtonState(inputList, buttonElement, validationConfig) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n  }\n};\nvar setEventListeners = function setEventListeners(formElement, validationConfig) {\n  var inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  var buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n  toggleButtonState(inputList, buttonElement, validationConfig);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener(\'input\', function () {\n      checkInputValidity(formElement, inputElement, validationConfig);\n      toggleButtonState(inputList, buttonElement, validationConfig);\n    });\n  });\n};\nvar clearValidation = function clearValidation(profileForm, validationConfig) {\n  var inputList = Array.from(profileForm.querySelectorAll(validationConfig.inputSelector));\n  var buttonElement = profileForm.querySelector(validationConfig.submitButtonSelector);\n  toggleButtonState(inputList, buttonElement, validationConfig);\n  resetInputErrors(profileForm, validationConfig);\n};\nvar enableValidation = function enableValidation(validationConfig) {\n  var formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n  formList.forEach(function (formElement) {\n    formElement.addEventListener(\'submit\', setEventListeners(formElement, validationConfig));\n  });\n};\n\n;// CONCATENATED MODULE: ./src/scripts/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\nvar popupProfile = document.querySelector(".popup_type_edit");\nvar popupProfileForm = document.forms["edit-profile"];\nvar popupProfileButton = document.querySelector(".profile__edit-button");\nvar popupAvatar = document.querySelector(".popup_type_avatar");\nvar popupAvatarForm = document.forms["edit-avatar"];\nvar popupProfileImageButton = popupAvatar.querySelector(".popup__button");\nvar urlAvatar = popupAvatar.querySelector(".popup__input_type_url");\nvar popupCard = document.querySelector(\'.popup_type_new-card\');\nvar popupCardForm = document.forms["new-place"];\nvar popupCardButton = document.querySelector(".profile__add-button");\nvar popupImage = document.querySelector(\'.popup_type_image\');\nvar popupPhoto = document.querySelector(\'.popup__image\');\nvar popupImageTitle = document.querySelector(\'.popup__caption\');\nvar popups = document.querySelectorAll(\'.popup\');\nvar profileForm = document.querySelector(\'.popup__form\');\nvar nameInput = document.querySelector(\'.popup__input_type_name\');\nvar jobInput = document.querySelector(\'.popup__input_type_description\');\nvar profileTitle = document.querySelector(\'.profile__title\');\nvar profileDescription = document.querySelector(\'.profile__description\');\nvar profileImage = document.querySelector(\'.profile__image\');\nvar cardNameInput = popupCard.querySelector(\'.popup__input_type_card-name\');\nvar urlInput = popupCard.querySelector(\'.popup__input_type_url\');\nvar popupDeleteConfirm = document.querySelector(".popup_type_delete-confirm");\nvar popupDeleteConfirmButton = popupDeleteConfirm.querySelector(".popup__button");\nvar validationConfig = {\n  formSelector: ".popup__form",\n  inputSelector: ".popup__input",\n  submitButtonSelector: ".popup__button",\n  inactiveButtonClass: "popup__button_disabled",\n  inputErrorClass: "popup__input_type_error",\n  errorClass: "popup__error_visible"\n};\nvar userId = "";\npopupProfileButton.addEventListener(\'click\', function () {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n  clearValidation(popupProfileForm, validationConfig);\n  openPopup(popupProfile);\n});\npopupCardButton.addEventListener(\'click\', function () {\n  clearValidation(popupCard, validationConfig);\n  openPopup(popupCard);\n});\npopups.forEach(function (popup) {\n  popup.addEventListener(\'click\', closePopupOverlay);\n  popup.querySelector(\'.popup__close\').addEventListener(\'click\', function () {\n    return closePopup(popup);\n  });\n});\nfunction handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n  renderSaving(true, popupProfile.querySelector(\'.popup__button\'));\n  editProfile(nameInput.value, jobInput.value).then(function (res) {\n    profileTitle.textContent = res.name;\n    profileDescription.textContent = res.about;\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    return renderSaving(false, popupProfile.querySelector(\'.popup__button\'));\n  });\n  closePopup(profileForm.closest(\'.popup\'));\n}\nprofileForm.addEventListener(\'submit\', handleProfileFormSubmit);\nfunction handleCardFormSubmit(evt) {\n  evt.preventDefault();\n  renderSaving(true, popupCard.querySelector(\'.popup__button\'));\n  addNewCard(cardNameInput.value, urlInput.value).then(function (card) {\n    var newCard = createCard(card, userId, deleteCardPopup, likeCard, openImagePopup);\n    containerCard.prepend(newCard);\n    closePopup(popupCard.closest(\'.popup\'));\n    popupCardForm.reset();\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    return renderSaving(false, popupCard.querySelector(\'.popup__button\'));\n  });\n}\npopupCard.addEventListener(\'submit\', handleCardFormSubmit);\nfunction openImagePopup(imageURL, imageAlt, imageTitle) {\n  popupPhoto.src = imageURL;\n  popupPhoto.alt = imageAlt;\n  popupImageTitle.textContent = imageTitle;\n  openPopup(popupImage);\n}\n;\nprofileImage.addEventListener(\'click\', function () {\n  clearValidation(popupAvatar, validationConfig);\n  openPopup(popupAvatar);\n});\nfunction handleProfileImageSubmit(evt) {\n  evt.preventDefault();\n  renderSaving(true, popupProfileImageButton);\n  editProfileImage(urlAvatar.value).then(function (res) {\n    profileImage.style = "background-image: url(\'".concat(res.avatar, "\')");\n    closePopup(popupAvatar);\n    popupAvatarForm.reset();\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    return renderSaving(false, popupProfileImageButton);\n  });\n}\n;\npopupAvatar.addEventListener(\'submit\', handleProfileImageSubmit);\nfunction renderSaving(isSaving, button) {\n  button.textContent = isSaving ? \'Сохранение...\' : \'Сохранить\';\n}\nfunction deleteCardPopup(cardId) {\n  openPopup(popupDeleteConfirm);\n  popupDeleteConfirmButton.dataset.cardId = cardId;\n}\nfunction handleDeleteCardConfirm(evt) {\n  evt.preventDefault();\n  var cardId = popupDeleteConfirmButton.dataset.cardId;\n  deleteCard(cardId).then(function () {\n    var deleteCard = document.querySelector(".places__item[data-id=\\"".concat(cardId, "\\"]"));\n    deleteCard.remove();\n    popupDeleteConfirmButton.dataset.cardId = "";\n    closePopup(popupDeleteConfirm);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\npopupDeleteConfirmButton.addEventListener(\'click\', handleDeleteCardConfirm);\nPromise.all([getUserData(), getInitialCards()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    userData = _ref2[0],\n    initialCards = _ref2[1];\n  userId = userData["_id"];\n  profileTitle.textContent = userData.name;\n  profileDescription.textContent = userData.about;\n  profileImage.style = "background-image: url(\'".concat(userData.avatar, "\')");\n  initialCards.forEach(function (card) {\n    var cardElement = createCard(card, userId, deleteCardPopup, likeCard, openImagePopup);\n    containerCard.append(cardElement);\n  });\n}).catch(function (err) {\n  return console.log(err);\n});\nenableValidation(validationConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///653\n')}},__webpack_exports__={};__webpack_modules__[653]()})();